version: '3.8'

services:
  pixel-detector:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: pixel-detector
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - LOG_LEVEL=INFO
      - WORKERS=4
      - TIMEOUT=300
      - MAX_CONCURRENT_SCANS=10
      # Optional: Add your company's proxy if needed
      # - HTTP_PROXY=http://your-proxy:8080
      # - HTTPS_PROXY=http://your-proxy:8080
    volumes:
      - ./results:/app/results
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching scan results
  redis:
    image: redis:7-alpine
    container_name: pixel-detector-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: PostgreSQL for storing scan history
  postgres:
    image: postgres:15-alpine
    container_name: pixel-detector-db
    environment:
      - POSTGRES_DB=pixel_detector
      - POSTGRES_USER=pixel_admin
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Optional: Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: pixel-detector-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - postgres
    restart: unless-stopped

  # Optional: API Gateway for enterprise features
  nginx:
    image: nginx:alpine
    container_name: pixel-detector-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - pixel-detector
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  grafana_data:

# Network configuration for internal communication
networks:
  default:
    name: pixel-detector-network
    driver: bridge